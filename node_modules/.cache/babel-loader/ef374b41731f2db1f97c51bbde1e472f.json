{"ast":null,"code":"import { CHANGE_SEARCHFIELD, CHANGE_SEARCHTAGFIELD, REQUEST_STUDENTS_PENDING, REQUEST_STUDENTS_SUCCESS, REQUEST_STUDENTS_FAILED, UPDATE_STUDENTS_DATA } from './constants';\nconst initialStateSearch = {\n  searchField: ''\n};\nexport const searchStudents = (state = initialStateSearch, action = {}) => {\n  switch (action.type) {\n    case CHANGE_SEARCHFIELD:\n      return Object.assign({}, state, {\n        searchField: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\nconst initialStateSearchTag = {\n  searchTagField: ''\n};\nexport const searchTags = (state = initialStateSearchTag, action = {}) => {\n  switch (action.type) {\n    case CHANGE_SEARCHTAGFIELD:\n      return Object.assign({}, state, {\n        searchTagField: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\nconst initialStateStudents = {\n  students: [],\n  isPending: true\n};\nexport const requestStudents = (state = initialStateStudents, action = {}) => {\n  switch (action.type) {\n    case REQUEST_STUDENTS_PENDING:\n      return Object.assign({}, state, {\n        isPending: true\n      });\n\n    case REQUEST_STUDENTS_SUCCESS:\n      return Object.assign({}, state, {\n        students: action.payload,\n        isPending: false\n      });\n\n    case REQUEST_STUDENTS_FAILED:\n      return Object.assign({}, state, {\n        error: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\nconst initialStateUpdatedStudents = {\n  updatedStudents: []\n};\nexport const updateStudentsData = (state = initialStateUpdatedStudents, action = {}) => {\n  switch (action.type) {\n    case UPDATE_STUDENTS_DATA:\n      return Object.assign({}, state, {\n        updatedStudents: action.payload\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/Stephanie/Desktop/student_profiles/src/redux/reducers.js"],"names":["CHANGE_SEARCHFIELD","CHANGE_SEARCHTAGFIELD","REQUEST_STUDENTS_PENDING","REQUEST_STUDENTS_SUCCESS","REQUEST_STUDENTS_FAILED","UPDATE_STUDENTS_DATA","initialStateSearch","searchField","searchStudents","state","action","type","Object","assign","payload","initialStateSearchTag","searchTagField","searchTags","initialStateStudents","students","isPending","requestStudents","error","initialStateUpdatedStudents","updatedStudents","updateStudentsData"],"mappings":"AAAA,SACEA,kBADF,EAEEC,qBAFF,EAGEC,wBAHF,EAIEC,wBAJF,EAKEC,uBALF,EAMEC,oBANF,QAOQ,aAPR;AASA,MAAMC,kBAAkB,GAAG;AACzBC,EAAAA,WAAW,EAAE;AADY,CAA3B;AAGA,OAAO,MAAMC,cAAc,GAAG,CAACC,KAAK,GAACH,kBAAP,EAA2BI,MAAM,GAAC,EAAlC,KAAyC;AACrE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,kBAAL;AACE,aAAOY,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAACF,QAAAA,WAAW,EAAEG,MAAM,CAACI;AAArB,OAAzB,CAAP;;AACF;AACE,aAAOL,KAAP;AAJJ;AAMD,CAPM;AASP,MAAMM,qBAAqB,GAAG;AAC5BC,EAAAA,cAAc,EAAE;AADY,CAA9B;AAGA,OAAO,MAAMC,UAAU,GAAG,CAACR,KAAK,GAACM,qBAAP,EAA8BL,MAAM,GAAC,EAArC,KAA4C;AACpE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,qBAAL;AACE,aAAOW,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAACO,QAAAA,cAAc,EAAEN,MAAM,CAACI;AAAxB,OAAzB,CAAP;;AACF;AACE,aAAOL,KAAP;AAJJ;AAMD,CAPM;AASP,MAAMS,oBAAoB,GAAG;AAC3BC,EAAAA,QAAQ,EAAE,EADiB;AAE3BC,EAAAA,SAAS,EAAE;AAFgB,CAA7B;AAIA,OAAO,MAAMC,eAAe,GAAG,CAACZ,KAAK,GAACS,oBAAP,EAA6BR,MAAM,GAAC,EAApC,KAA2C;AACxE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,wBAAL;AACE,aAAOU,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAACW,QAAAA,SAAS,EAAE;AAAZ,OAAzB,CAAP;;AACF,SAAKjB,wBAAL;AACE,aAAOS,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAACU,QAAAA,QAAQ,EAAET,MAAM,CAACI,OAAlB;AAA2BM,QAAAA,SAAS,EAAE;AAAtC,OAAzB,CAAP;;AACF,SAAKhB,uBAAL;AACE,aAAOQ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAACa,QAAAA,KAAK,EAAEZ,MAAM,CAACI;AAAf,OAAzB,CAAP;;AACF;AACE,aAAOL,KAAP;AARJ;AAUD,CAXM;AAaP,MAAMc,2BAA2B,GAAG;AAClCC,EAAAA,eAAe,EAAE;AADiB,CAApC;AAGA,OAAO,MAAMC,kBAAkB,GAAG,CAAChB,KAAK,GAACc,2BAAP,EAAoCb,MAAM,GAAC,EAA3C,KAAkD;AAClF,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,oBAAL;AACE,aAAOO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAACe,QAAAA,eAAe,EAAEd,MAAM,CAACI;AAAzB,OAAzB,CAAP;;AACF;AACE,aAAOL,KAAP;AAJJ;AAMD,CAPM","sourcesContent":["import {\n  CHANGE_SEARCHFIELD,\n  CHANGE_SEARCHTAGFIELD,\n  REQUEST_STUDENTS_PENDING,\n  REQUEST_STUDENTS_SUCCESS,\n  REQUEST_STUDENTS_FAILED,\n  UPDATE_STUDENTS_DATA\n } from './constants'\n\nconst initialStateSearch = {\n  searchField: ''\n}\nexport const searchStudents = (state=initialStateSearch, action={}) => {\n  switch (action.type) {\n    case CHANGE_SEARCHFIELD:\n      return Object.assign({}, state, {searchField: action.payload})\n    default:\n      return state\n  }\n}\n\nconst initialStateSearchTag = {\n  searchTagField: ''\n}\nexport const searchTags = (state=initialStateSearchTag, action={}) => {\n  switch (action.type) {\n    case CHANGE_SEARCHTAGFIELD:\n      return Object.assign({}, state, {searchTagField: action.payload})\n    default:\n      return state\n  }\n}\n\nconst initialStateStudents = {\n  students: [],\n  isPending: true\n}\nexport const requestStudents = (state=initialStateStudents, action={}) => {\n  switch (action.type) {\n    case REQUEST_STUDENTS_PENDING:\n      return Object.assign({}, state, {isPending: true})\n    case REQUEST_STUDENTS_SUCCESS:\n      return Object.assign({}, state, {students: action.payload, isPending: false})\n    case REQUEST_STUDENTS_FAILED:\n      return Object.assign({}, state, {error: action.payload})\n    default:\n      return state\n  }\n}\n\nconst initialStateUpdatedStudents = {\n  updatedStudents: []\n}\nexport const updateStudentsData = (state=initialStateUpdatedStudents, action={}) => {\n  switch (action.type) {\n    case UPDATE_STUDENTS_DATA:\n      return Object.assign({}, state, {updatedStudents: action.payload})\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}